generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model care_instruction {
  id                    String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  watering_frequency    Int
  sunlight_requirements String   @db.VarChar(255)
  soil_type             String   @db.VarChar(255)
  plant_id              String   @db.Uuid
  created_at            DateTime @default(now()) @db.Timestamp(6)
  updated_at            DateTime @default(now()) @db.Timestamp(6)
  plant                 plant    @relation(fields: [plant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model plant {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name             String             @db.VarChar(255)
  species          String             @db.VarChar(255)
  location         String?            @db.VarChar(255)
  growth_stage     String?            @db.VarChar(255)
  provider_id      String             @db.Uuid
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  care_instruction care_instruction[]
  provider         provider           @relation(fields: [provider_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reminder         reminder[]
}

model provider {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  plant       plant[]
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model reminder {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type       String   @db.VarChar(255)
  date       DateTime @db.Date
  plant_id   String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  plant      plant    @relation(fields: [plant_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String     @unique @db.VarChar(255)
  firstName   String?    @db.VarChar(255)
  lastName    String?    @db.VarChar(255)
  roq_user_id String     @db.VarChar(255)
  tenant_id   String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  provider    provider[]
}
